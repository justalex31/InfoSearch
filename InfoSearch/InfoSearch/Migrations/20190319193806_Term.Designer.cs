// <auto-generated />
using System;
using InfoSearch.AppData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace InfoSearch.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190319193806_Term")]
    partial class Term
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("InfoSearch.Model.Article_Term", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ArticleId");

                    b.Property<Guid>("TermId");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("TermId");

                    b.ToTable("Article_Terms");
                });

            modelBuilder.Entity("InfoSearch.Model.Articles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<string>("Keywords");

                    b.Property<Guid?>("StudentId");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("InfoSearch.Model.Students", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Mygroup");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("InfoSearch.Model.Term_List", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Term_Text");

                    b.HasKey("Id");

                    b.ToTable("Term_Lists");
                });

            modelBuilder.Entity("InfoSearch.Model.Words_MyStem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ArticleId");

                    b.Property<string>("Term");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Words_MyStems");
                });

            modelBuilder.Entity("InfoSearch.Model.Words_Porter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ArticleId");

                    b.Property<string>("Term");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Words_Porters");
                });

            modelBuilder.Entity("InfoSearch.Model.Article_Term", b =>
                {
                    b.HasOne("InfoSearch.Model.Articles", "Article")
                        .WithMany("Article_Terms")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("InfoSearch.Model.Term_List", "Term")
                        .WithMany("Article_Terms")
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InfoSearch.Model.Articles", b =>
                {
                    b.HasOne("InfoSearch.Model.Students", "Student")
                        .WithMany("Articles")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("InfoSearch.Model.Words_MyStem", b =>
                {
                    b.HasOne("InfoSearch.Model.Articles", "Article")
                        .WithMany("Words_MyStems")
                        .HasForeignKey("ArticleId");
                });

            modelBuilder.Entity("InfoSearch.Model.Words_Porter", b =>
                {
                    b.HasOne("InfoSearch.Model.Articles", "Article")
                        .WithMany("Words_Porters")
                        .HasForeignKey("ArticleId");
                });
#pragma warning restore 612, 618
        }
    }
}
